// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: onnx/onnx-operators-ml.proto
// Protobuf C++ Version: 5.29.3

#ifndef onnx_2fonnx_2doperators_2dml_2eproto_2epb_2eh
#define onnx_2fonnx_2doperators_2dml_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029003
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "onnx/onnx-ml.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_onnx_2fonnx_2doperators_2dml_2eproto ONNX_API

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct ONNX_API TableStruct_onnx_2fonnx_2doperators_2dml_2eproto {
  static const ::uint32_t offsets[];
};
ONNX_API extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_onnx_2fonnx_2doperators_2dml_2eproto;
namespace onnx {
class OperatorProto;
struct OperatorProtoDefaultTypeInternal;
ONNX_API extern OperatorProtoDefaultTypeInternal _OperatorProto_default_instance_;
class OperatorSetProto;
struct OperatorSetProtoDefaultTypeInternal;
ONNX_API extern OperatorSetProtoDefaultTypeInternal _OperatorSetProto_default_instance_;
}  // namespace onnx
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace onnx {

// ===================================================================


// -------------------------------------------------------------------

class ONNX_API OperatorProto final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:onnx.OperatorProto) */ {
 public:
  inline OperatorProto() : OperatorProto(nullptr) {}
  ~OperatorProto() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(OperatorProto* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(OperatorProto));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR OperatorProto(
      ::google::protobuf::internal::ConstantInitialized);

  inline OperatorProto(const OperatorProto& from) : OperatorProto(nullptr, from) {}
  inline OperatorProto(OperatorProto&& from) noexcept
      : OperatorProto(nullptr, std::move(from)) {}
  inline OperatorProto& operator=(const OperatorProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline OperatorProto& operator=(OperatorProto&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const OperatorProto& default_instance() {
    return *internal_default_instance();
  }
  static inline const OperatorProto* internal_default_instance() {
    return reinterpret_cast<const OperatorProto*>(
        &_OperatorProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(OperatorProto& a, OperatorProto& b) { a.Swap(&b); }
  inline void Swap(OperatorProto* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(OperatorProto* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  OperatorProto* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<OperatorProto>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const OperatorProto& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const OperatorProto& from) { OperatorProto::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(OperatorProto* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "onnx.OperatorProto"; }

 protected:
  explicit OperatorProto(::google::protobuf::Arena* arena);
  OperatorProto(::google::protobuf::Arena* arena, const OperatorProto& from);
  OperatorProto(::google::protobuf::Arena* arena, OperatorProto&& from) noexcept
      : OperatorProto(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kOpTypeFieldNumber = 1,
    kDocStringFieldNumber = 10,
    kSinceVersionFieldNumber = 2,
    kStatusFieldNumber = 3,
  };
  // optional string op_type = 1;
  bool has_op_type() const;
  void clear_op_type() ;
  const std::string& op_type() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_op_type(Arg_&& arg, Args_... args);
  std::string* mutable_op_type();
  PROTOBUF_NODISCARD std::string* release_op_type();
  void set_allocated_op_type(std::string* value);

  private:
  const std::string& _internal_op_type() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_op_type(
      const std::string& value);
  std::string* _internal_mutable_op_type();

  public:
  // optional string doc_string = 10;
  bool has_doc_string() const;
  void clear_doc_string() ;
  const std::string& doc_string() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_doc_string(Arg_&& arg, Args_... args);
  std::string* mutable_doc_string();
  PROTOBUF_NODISCARD std::string* release_doc_string();
  void set_allocated_doc_string(std::string* value);

  private:
  const std::string& _internal_doc_string() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_doc_string(
      const std::string& value);
  std::string* _internal_mutable_doc_string();

  public:
  // optional int64 since_version = 2;
  bool has_since_version() const;
  void clear_since_version() ;
  ::int64_t since_version() const;
  void set_since_version(::int64_t value);

  private:
  ::int64_t _internal_since_version() const;
  void _internal_set_since_version(::int64_t value);

  public:
  // optional .onnx.OperatorStatus status = 3;
  bool has_status() const;
  void clear_status() ;
  ::onnx::OperatorStatus status() const;
  void set_status(::onnx::OperatorStatus value);

  private:
  ::onnx::OperatorStatus _internal_status() const;
  void _internal_set_status(::onnx::OperatorStatus value);

  public:
  // @@protoc_insertion_point(class_scope:onnx.OperatorProto)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 1,
      44, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const OperatorProto& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr op_type_;
    ::google::protobuf::internal::ArenaStringPtr doc_string_;
    ::int64_t since_version_;
    int status_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_onnx_2fonnx_2doperators_2dml_2eproto;
};
// -------------------------------------------------------------------

class ONNX_API OperatorSetProto final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:onnx.OperatorSetProto) */ {
 public:
  inline OperatorSetProto() : OperatorSetProto(nullptr) {}
  ~OperatorSetProto() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(OperatorSetProto* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(OperatorSetProto));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR OperatorSetProto(
      ::google::protobuf::internal::ConstantInitialized);

  inline OperatorSetProto(const OperatorSetProto& from) : OperatorSetProto(nullptr, from) {}
  inline OperatorSetProto(OperatorSetProto&& from) noexcept
      : OperatorSetProto(nullptr, std::move(from)) {}
  inline OperatorSetProto& operator=(const OperatorSetProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline OperatorSetProto& operator=(OperatorSetProto&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const OperatorSetProto& default_instance() {
    return *internal_default_instance();
  }
  static inline const OperatorSetProto* internal_default_instance() {
    return reinterpret_cast<const OperatorSetProto*>(
        &_OperatorSetProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(OperatorSetProto& a, OperatorSetProto& b) { a.Swap(&b); }
  inline void Swap(OperatorSetProto* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(OperatorSetProto* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  OperatorSetProto* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<OperatorSetProto>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const OperatorSetProto& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const OperatorSetProto& from) { OperatorSetProto::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(OperatorSetProto* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "onnx.OperatorSetProto"; }

 protected:
  explicit OperatorSetProto(::google::protobuf::Arena* arena);
  OperatorSetProto(::google::protobuf::Arena* arena, const OperatorSetProto& from);
  OperatorSetProto(::google::protobuf::Arena* arena, OperatorSetProto&& from) noexcept
      : OperatorSetProto(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kOperatorFieldNumber = 8,
    kFunctionsFieldNumber = 9,
    kMagicFieldNumber = 1,
    kIrVersionPrereleaseFieldNumber = 3,
    kDomainFieldNumber = 4,
    kDocStringFieldNumber = 6,
    kIrBuildMetadataFieldNumber = 7,
    kIrVersionFieldNumber = 2,
    kOpsetVersionFieldNumber = 5,
  };
  // repeated .onnx.OperatorProto operator = 8;
  int operator__size() const;
  private:
  int _internal_operator__size() const;

  public:
  void clear_operator_() ;
  ::onnx::OperatorProto* mutable_operator_(int index);
  ::google::protobuf::RepeatedPtrField<::onnx::OperatorProto>* mutable_operator_();

  private:
  const ::google::protobuf::RepeatedPtrField<::onnx::OperatorProto>& _internal_operator_() const;
  ::google::protobuf::RepeatedPtrField<::onnx::OperatorProto>* _internal_mutable_operator_();
  public:
  const ::onnx::OperatorProto& operator_(int index) const;
  ::onnx::OperatorProto* add_operator_();
  const ::google::protobuf::RepeatedPtrField<::onnx::OperatorProto>& operator_() const;
  // repeated .onnx.FunctionProto functions = 9;
  int functions_size() const;
  private:
  int _internal_functions_size() const;

  public:
  void clear_functions() ;
  ::onnx::FunctionProto* mutable_functions(int index);
  ::google::protobuf::RepeatedPtrField<::onnx::FunctionProto>* mutable_functions();

  private:
  const ::google::protobuf::RepeatedPtrField<::onnx::FunctionProto>& _internal_functions() const;
  ::google::protobuf::RepeatedPtrField<::onnx::FunctionProto>* _internal_mutable_functions();
  public:
  const ::onnx::FunctionProto& functions(int index) const;
  ::onnx::FunctionProto* add_functions();
  const ::google::protobuf::RepeatedPtrField<::onnx::FunctionProto>& functions() const;
  // optional string magic = 1;
  bool has_magic() const;
  void clear_magic() ;
  const std::string& magic() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_magic(Arg_&& arg, Args_... args);
  std::string* mutable_magic();
  PROTOBUF_NODISCARD std::string* release_magic();
  void set_allocated_magic(std::string* value);

  private:
  const std::string& _internal_magic() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_magic(
      const std::string& value);
  std::string* _internal_mutable_magic();

  public:
  // optional string ir_version_prerelease = 3;
  bool has_ir_version_prerelease() const;
  void clear_ir_version_prerelease() ;
  const std::string& ir_version_prerelease() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_ir_version_prerelease(Arg_&& arg, Args_... args);
  std::string* mutable_ir_version_prerelease();
  PROTOBUF_NODISCARD std::string* release_ir_version_prerelease();
  void set_allocated_ir_version_prerelease(std::string* value);

  private:
  const std::string& _internal_ir_version_prerelease() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_ir_version_prerelease(
      const std::string& value);
  std::string* _internal_mutable_ir_version_prerelease();

  public:
  // optional string domain = 4;
  bool has_domain() const;
  void clear_domain() ;
  const std::string& domain() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_domain(Arg_&& arg, Args_... args);
  std::string* mutable_domain();
  PROTOBUF_NODISCARD std::string* release_domain();
  void set_allocated_domain(std::string* value);

  private:
  const std::string& _internal_domain() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_domain(
      const std::string& value);
  std::string* _internal_mutable_domain();

  public:
  // optional string doc_string = 6;
  bool has_doc_string() const;
  void clear_doc_string() ;
  const std::string& doc_string() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_doc_string(Arg_&& arg, Args_... args);
  std::string* mutable_doc_string();
  PROTOBUF_NODISCARD std::string* release_doc_string();
  void set_allocated_doc_string(std::string* value);

  private:
  const std::string& _internal_doc_string() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_doc_string(
      const std::string& value);
  std::string* _internal_mutable_doc_string();

  public:
  // optional string ir_build_metadata = 7;
  bool has_ir_build_metadata() const;
  void clear_ir_build_metadata() ;
  const std::string& ir_build_metadata() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_ir_build_metadata(Arg_&& arg, Args_... args);
  std::string* mutable_ir_build_metadata();
  PROTOBUF_NODISCARD std::string* release_ir_build_metadata();
  void set_allocated_ir_build_metadata(std::string* value);

  private:
  const std::string& _internal_ir_build_metadata() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_ir_build_metadata(
      const std::string& value);
  std::string* _internal_mutable_ir_build_metadata();

  public:
  // optional int64 ir_version = 2;
  bool has_ir_version() const;
  void clear_ir_version() ;
  ::int64_t ir_version() const;
  void set_ir_version(::int64_t value);

  private:
  ::int64_t _internal_ir_version() const;
  void _internal_set_ir_version(::int64_t value);

  public:
  // optional int64 opset_version = 5;
  bool has_opset_version() const;
  void clear_opset_version() ;
  ::int64_t opset_version() const;
  void set_opset_version(::int64_t value);

  private:
  ::int64_t _internal_opset_version() const;
  void _internal_set_opset_version(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:onnx.OperatorSetProto)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 9, 2,
      97, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const OperatorSetProto& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::onnx::OperatorProto > operator__;
    ::google::protobuf::RepeatedPtrField< ::onnx::FunctionProto > functions_;
    ::google::protobuf::internal::ArenaStringPtr magic_;
    ::google::protobuf::internal::ArenaStringPtr ir_version_prerelease_;
    ::google::protobuf::internal::ArenaStringPtr domain_;
    ::google::protobuf::internal::ArenaStringPtr doc_string_;
    ::google::protobuf::internal::ArenaStringPtr ir_build_metadata_;
    ::int64_t ir_version_;
    ::int64_t opset_version_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_onnx_2fonnx_2doperators_2dml_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// OperatorProto

// optional string op_type = 1;
inline bool OperatorProto::has_op_type() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void OperatorProto::clear_op_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.op_type_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& OperatorProto::op_type() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:onnx.OperatorProto.op_type)
  return _internal_op_type();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void OperatorProto::set_op_type(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.op_type_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:onnx.OperatorProto.op_type)
}
inline std::string* OperatorProto::mutable_op_type() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_op_type();
  // @@protoc_insertion_point(field_mutable:onnx.OperatorProto.op_type)
  return _s;
}
inline const std::string& OperatorProto::_internal_op_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.op_type_.Get();
}
inline void OperatorProto::_internal_set_op_type(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.op_type_.Set(value, GetArena());
}
inline std::string* OperatorProto::_internal_mutable_op_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.op_type_.Mutable( GetArena());
}
inline std::string* OperatorProto::release_op_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:onnx.OperatorProto.op_type)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.op_type_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.op_type_.Set("", GetArena());
  }
  return released;
}
inline void OperatorProto::set_allocated_op_type(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.op_type_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.op_type_.IsDefault()) {
    _impl_.op_type_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:onnx.OperatorProto.op_type)
}

// optional int64 since_version = 2;
inline bool OperatorProto::has_since_version() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void OperatorProto::clear_since_version() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.since_version_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::int64_t OperatorProto::since_version() const {
  // @@protoc_insertion_point(field_get:onnx.OperatorProto.since_version)
  return _internal_since_version();
}
inline void OperatorProto::set_since_version(::int64_t value) {
  _internal_set_since_version(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:onnx.OperatorProto.since_version)
}
inline ::int64_t OperatorProto::_internal_since_version() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.since_version_;
}
inline void OperatorProto::_internal_set_since_version(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.since_version_ = value;
}

// optional .onnx.OperatorStatus status = 3;
inline bool OperatorProto::has_status() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void OperatorProto::clear_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_ = 0;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::onnx::OperatorStatus OperatorProto::status() const {
  // @@protoc_insertion_point(field_get:onnx.OperatorProto.status)
  return _internal_status();
}
inline void OperatorProto::set_status(::onnx::OperatorStatus value) {
  _internal_set_status(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:onnx.OperatorProto.status)
}
inline ::onnx::OperatorStatus OperatorProto::_internal_status() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::onnx::OperatorStatus>(_impl_.status_);
}
inline void OperatorProto::_internal_set_status(::onnx::OperatorStatus value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  assert(::onnx::OperatorStatus_IsValid(value));
  _impl_.status_ = value;
}

// optional string doc_string = 10;
inline bool OperatorProto::has_doc_string() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void OperatorProto::clear_doc_string() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.doc_string_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const std::string& OperatorProto::doc_string() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:onnx.OperatorProto.doc_string)
  return _internal_doc_string();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void OperatorProto::set_doc_string(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.doc_string_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:onnx.OperatorProto.doc_string)
}
inline std::string* OperatorProto::mutable_doc_string() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_doc_string();
  // @@protoc_insertion_point(field_mutable:onnx.OperatorProto.doc_string)
  return _s;
}
inline const std::string& OperatorProto::_internal_doc_string() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.doc_string_.Get();
}
inline void OperatorProto::_internal_set_doc_string(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.doc_string_.Set(value, GetArena());
}
inline std::string* OperatorProto::_internal_mutable_doc_string() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.doc_string_.Mutable( GetArena());
}
inline std::string* OperatorProto::release_doc_string() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:onnx.OperatorProto.doc_string)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.doc_string_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.doc_string_.Set("", GetArena());
  }
  return released;
}
inline void OperatorProto::set_allocated_doc_string(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.doc_string_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.doc_string_.IsDefault()) {
    _impl_.doc_string_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:onnx.OperatorProto.doc_string)
}

// -------------------------------------------------------------------

// OperatorSetProto

// optional string magic = 1;
inline bool OperatorSetProto::has_magic() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void OperatorSetProto::clear_magic() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.magic_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& OperatorSetProto::magic() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:onnx.OperatorSetProto.magic)
  return _internal_magic();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void OperatorSetProto::set_magic(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.magic_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:onnx.OperatorSetProto.magic)
}
inline std::string* OperatorSetProto::mutable_magic() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_magic();
  // @@protoc_insertion_point(field_mutable:onnx.OperatorSetProto.magic)
  return _s;
}
inline const std::string& OperatorSetProto::_internal_magic() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.magic_.Get();
}
inline void OperatorSetProto::_internal_set_magic(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.magic_.Set(value, GetArena());
}
inline std::string* OperatorSetProto::_internal_mutable_magic() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.magic_.Mutable( GetArena());
}
inline std::string* OperatorSetProto::release_magic() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:onnx.OperatorSetProto.magic)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.magic_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.magic_.Set("", GetArena());
  }
  return released;
}
inline void OperatorSetProto::set_allocated_magic(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.magic_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.magic_.IsDefault()) {
    _impl_.magic_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:onnx.OperatorSetProto.magic)
}

// optional int64 ir_version = 2;
inline bool OperatorSetProto::has_ir_version() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline void OperatorSetProto::clear_ir_version() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ir_version_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline ::int64_t OperatorSetProto::ir_version() const {
  // @@protoc_insertion_point(field_get:onnx.OperatorSetProto.ir_version)
  return _internal_ir_version();
}
inline void OperatorSetProto::set_ir_version(::int64_t value) {
  _internal_set_ir_version(value);
  _impl_._has_bits_[0] |= 0x00000020u;
  // @@protoc_insertion_point(field_set:onnx.OperatorSetProto.ir_version)
}
inline ::int64_t OperatorSetProto::_internal_ir_version() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.ir_version_;
}
inline void OperatorSetProto::_internal_set_ir_version(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ir_version_ = value;
}

// optional string ir_version_prerelease = 3;
inline bool OperatorSetProto::has_ir_version_prerelease() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void OperatorSetProto::clear_ir_version_prerelease() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ir_version_prerelease_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const std::string& OperatorSetProto::ir_version_prerelease() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:onnx.OperatorSetProto.ir_version_prerelease)
  return _internal_ir_version_prerelease();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void OperatorSetProto::set_ir_version_prerelease(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.ir_version_prerelease_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:onnx.OperatorSetProto.ir_version_prerelease)
}
inline std::string* OperatorSetProto::mutable_ir_version_prerelease() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_ir_version_prerelease();
  // @@protoc_insertion_point(field_mutable:onnx.OperatorSetProto.ir_version_prerelease)
  return _s;
}
inline const std::string& OperatorSetProto::_internal_ir_version_prerelease() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.ir_version_prerelease_.Get();
}
inline void OperatorSetProto::_internal_set_ir_version_prerelease(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.ir_version_prerelease_.Set(value, GetArena());
}
inline std::string* OperatorSetProto::_internal_mutable_ir_version_prerelease() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.ir_version_prerelease_.Mutable( GetArena());
}
inline std::string* OperatorSetProto::release_ir_version_prerelease() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:onnx.OperatorSetProto.ir_version_prerelease)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.ir_version_prerelease_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.ir_version_prerelease_.Set("", GetArena());
  }
  return released;
}
inline void OperatorSetProto::set_allocated_ir_version_prerelease(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.ir_version_prerelease_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.ir_version_prerelease_.IsDefault()) {
    _impl_.ir_version_prerelease_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:onnx.OperatorSetProto.ir_version_prerelease)
}

// optional string ir_build_metadata = 7;
inline bool OperatorSetProto::has_ir_build_metadata() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline void OperatorSetProto::clear_ir_build_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ir_build_metadata_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline const std::string& OperatorSetProto::ir_build_metadata() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:onnx.OperatorSetProto.ir_build_metadata)
  return _internal_ir_build_metadata();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void OperatorSetProto::set_ir_build_metadata(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.ir_build_metadata_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:onnx.OperatorSetProto.ir_build_metadata)
}
inline std::string* OperatorSetProto::mutable_ir_build_metadata() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_ir_build_metadata();
  // @@protoc_insertion_point(field_mutable:onnx.OperatorSetProto.ir_build_metadata)
  return _s;
}
inline const std::string& OperatorSetProto::_internal_ir_build_metadata() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.ir_build_metadata_.Get();
}
inline void OperatorSetProto::_internal_set_ir_build_metadata(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.ir_build_metadata_.Set(value, GetArena());
}
inline std::string* OperatorSetProto::_internal_mutable_ir_build_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000010u;
  return _impl_.ir_build_metadata_.Mutable( GetArena());
}
inline std::string* OperatorSetProto::release_ir_build_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:onnx.OperatorSetProto.ir_build_metadata)
  if ((_impl_._has_bits_[0] & 0x00000010u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000010u;
  auto* released = _impl_.ir_build_metadata_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.ir_build_metadata_.Set("", GetArena());
  }
  return released;
}
inline void OperatorSetProto::set_allocated_ir_build_metadata(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }
  _impl_.ir_build_metadata_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.ir_build_metadata_.IsDefault()) {
    _impl_.ir_build_metadata_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:onnx.OperatorSetProto.ir_build_metadata)
}

// optional string domain = 4;
inline bool OperatorSetProto::has_domain() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void OperatorSetProto::clear_domain() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.domain_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const std::string& OperatorSetProto::domain() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:onnx.OperatorSetProto.domain)
  return _internal_domain();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void OperatorSetProto::set_domain(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.domain_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:onnx.OperatorSetProto.domain)
}
inline std::string* OperatorSetProto::mutable_domain() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_domain();
  // @@protoc_insertion_point(field_mutable:onnx.OperatorSetProto.domain)
  return _s;
}
inline const std::string& OperatorSetProto::_internal_domain() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.domain_.Get();
}
inline void OperatorSetProto::_internal_set_domain(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.domain_.Set(value, GetArena());
}
inline std::string* OperatorSetProto::_internal_mutable_domain() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  return _impl_.domain_.Mutable( GetArena());
}
inline std::string* OperatorSetProto::release_domain() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:onnx.OperatorSetProto.domain)
  if ((_impl_._has_bits_[0] & 0x00000004u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000004u;
  auto* released = _impl_.domain_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.domain_.Set("", GetArena());
  }
  return released;
}
inline void OperatorSetProto::set_allocated_domain(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  _impl_.domain_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.domain_.IsDefault()) {
    _impl_.domain_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:onnx.OperatorSetProto.domain)
}

// optional int64 opset_version = 5;
inline bool OperatorSetProto::has_opset_version() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline void OperatorSetProto::clear_opset_version() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.opset_version_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline ::int64_t OperatorSetProto::opset_version() const {
  // @@protoc_insertion_point(field_get:onnx.OperatorSetProto.opset_version)
  return _internal_opset_version();
}
inline void OperatorSetProto::set_opset_version(::int64_t value) {
  _internal_set_opset_version(value);
  _impl_._has_bits_[0] |= 0x00000040u;
  // @@protoc_insertion_point(field_set:onnx.OperatorSetProto.opset_version)
}
inline ::int64_t OperatorSetProto::_internal_opset_version() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.opset_version_;
}
inline void OperatorSetProto::_internal_set_opset_version(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.opset_version_ = value;
}

// optional string doc_string = 6;
inline bool OperatorSetProto::has_doc_string() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void OperatorSetProto::clear_doc_string() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.doc_string_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline const std::string& OperatorSetProto::doc_string() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:onnx.OperatorSetProto.doc_string)
  return _internal_doc_string();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void OperatorSetProto::set_doc_string(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.doc_string_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:onnx.OperatorSetProto.doc_string)
}
inline std::string* OperatorSetProto::mutable_doc_string() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_doc_string();
  // @@protoc_insertion_point(field_mutable:onnx.OperatorSetProto.doc_string)
  return _s;
}
inline const std::string& OperatorSetProto::_internal_doc_string() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.doc_string_.Get();
}
inline void OperatorSetProto::_internal_set_doc_string(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.doc_string_.Set(value, GetArena());
}
inline std::string* OperatorSetProto::_internal_mutable_doc_string() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000008u;
  return _impl_.doc_string_.Mutable( GetArena());
}
inline std::string* OperatorSetProto::release_doc_string() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:onnx.OperatorSetProto.doc_string)
  if ((_impl_._has_bits_[0] & 0x00000008u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000008u;
  auto* released = _impl_.doc_string_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.doc_string_.Set("", GetArena());
  }
  return released;
}
inline void OperatorSetProto::set_allocated_doc_string(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  _impl_.doc_string_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.doc_string_.IsDefault()) {
    _impl_.doc_string_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:onnx.OperatorSetProto.doc_string)
}

// repeated .onnx.OperatorProto operator = 8;
inline int OperatorSetProto::_internal_operator__size() const {
  return _internal_operator_().size();
}
inline int OperatorSetProto::operator__size() const {
  return _internal_operator__size();
}
inline void OperatorSetProto::clear_operator_() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.operator__.Clear();
}
inline ::onnx::OperatorProto* OperatorSetProto::mutable_operator_(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:onnx.OperatorSetProto.operator)
  return _internal_mutable_operator_()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::onnx::OperatorProto>* OperatorSetProto::mutable_operator_()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:onnx.OperatorSetProto.operator)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_operator_();
}
inline const ::onnx::OperatorProto& OperatorSetProto::operator_(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:onnx.OperatorSetProto.operator)
  return _internal_operator_().Get(index);
}
inline ::onnx::OperatorProto* OperatorSetProto::add_operator_() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::onnx::OperatorProto* _add = _internal_mutable_operator_()->Add();
  // @@protoc_insertion_point(field_add:onnx.OperatorSetProto.operator)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::onnx::OperatorProto>& OperatorSetProto::operator_() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:onnx.OperatorSetProto.operator)
  return _internal_operator_();
}
inline const ::google::protobuf::RepeatedPtrField<::onnx::OperatorProto>&
OperatorSetProto::_internal_operator_() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.operator__;
}
inline ::google::protobuf::RepeatedPtrField<::onnx::OperatorProto>*
OperatorSetProto::_internal_mutable_operator_() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.operator__;
}

// repeated .onnx.FunctionProto functions = 9;
inline int OperatorSetProto::_internal_functions_size() const {
  return _internal_functions().size();
}
inline int OperatorSetProto::functions_size() const {
  return _internal_functions_size();
}
inline ::onnx::FunctionProto* OperatorSetProto::mutable_functions(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:onnx.OperatorSetProto.functions)
  return _internal_mutable_functions()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::onnx::FunctionProto>* OperatorSetProto::mutable_functions()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:onnx.OperatorSetProto.functions)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_functions();
}
inline const ::onnx::FunctionProto& OperatorSetProto::functions(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:onnx.OperatorSetProto.functions)
  return _internal_functions().Get(index);
}
inline ::onnx::FunctionProto* OperatorSetProto::add_functions() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::onnx::FunctionProto* _add = _internal_mutable_functions()->Add();
  // @@protoc_insertion_point(field_add:onnx.OperatorSetProto.functions)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::onnx::FunctionProto>& OperatorSetProto::functions() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:onnx.OperatorSetProto.functions)
  return _internal_functions();
}
inline const ::google::protobuf::RepeatedPtrField<::onnx::FunctionProto>&
OperatorSetProto::_internal_functions() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.functions_;
}
inline ::google::protobuf::RepeatedPtrField<::onnx::FunctionProto>*
OperatorSetProto::_internal_mutable_functions() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.functions_;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace onnx


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // onnx_2fonnx_2doperators_2dml_2eproto_2epb_2eh
